#ifndef DEBUFFS_HACK
#define DEBUFFS_HACK

// Debuffs
// hack by CrazyColorz5, with additions by circleseverywhere and Kirb

#ifdef _FE8_

TeamDebuffTables:
  {
  #define MaxPlayerUnits 62+1
  #define MaxEnemyUnits 50+1
  #define MaxGreenUnits 20+1
  
  #define DebuffEntrySize 12 
  #define PUDebuffTable DebuffTableRam
  #define EUDebuffTable "PUDebuffTable + (MaxPlayerUnits*DebuffEntrySize)"
  #define GUDebuffTable "EUDebuffTable + (MaxEnemyUnits*DebuffEntrySize)"
  #define OUDebuffTable "GUDebuffTable + (MaxGreenUnits*DebuffEntrySize)"
  ALIGN 4
  WORD PUDebuffTable
  WORD GUDebuffTable
  WORD EUDebuffTable
  WORD OUDebuffTable
  }
  
  {

  PUSH

    ORG 0x17D7C // To zero out the additional data upon making a new unit.
      gotoHackWithR3(InitDebuffs)

    ORG 0xA5808 // This is for loading a previously deployed unit for the first time on a map.
      gotoHackWithR3(ReloadDebuffs)

    ORG 0x188A8 // This is for decreasing the debuffs each turn/ending rally
      jumpToHack(ProcessDebuffs)

    ORG 0x59A308 // Clear debuffs on chapter switch
      WORD $0D; POIN MapMainClearProc

    ORG 0x59191C // Clear debuffs on chapter switch
      WORD $0D; POIN GameCtrlClearProc

    // prevent debuffs and loading issue (Kirb)

    ORG 0xBA30
      WORD 0x203ED40

    ORG 0xBA54
      WORD 0x203ED40

    ORG 0xFA34
      WORD 0x203ED40

    ORG 0xD5B80
      WORD 0x203ED40

    // new stat getters
    // see modular stat getters

    // Weapons/Battle

    ORG 0x2B54E
      SHORT 0x46C0 // nop
      jumpToHack(damagedThisTurn)

    ORG 0x2B422
      #incbin "asm/Debuffs/SetHitThisTurn.dmp"

    // ORG 0x2C086
      // SHORT 0x46C0 // nop
      // jumpToHack(setDebuffs)

    ORG 0x2C078
      callHack_r3(setDebuffs)

  POP


  ALIGN 4
  damagedThisTurn:
    #incbin "asm/Debuffs/SetDamagedThisTurn.dmp"

  ALIGN 4
  setDebuffs:
    #include "asm/Debuffs/SetDebuffs.lyn.event"
    POIN GetUnitDebuffEntry|1
    POIN ItemTable
    POIN WeaponDebuffTable

   
    


  ALIGN 4
  MapMainClearProc:
    WORD $02; POIN (ClearAllDebuffs|1)
    WORD $02 $80155C5
    WORD $0D $859A310

  ALIGN 4
  GameCtrlClearProc:
    WORD $02; POIN (ClearAllDebuffs|1)
    WORD $02 $8009D99
    WORD $0D $8591924

  }


	#include "asm/Debuffs/Reload.lyn.event"
	#include "asm/Debuffs/InitDebuffs.lyn.event"
    #include "asm/Debuffs/ClearDebuffs.lyn.event"
    #include "asm/Debuffs/GetUnitDebuffEntry.lyn.event"
	#include "asm/Debuffs/ProcessDebuffs.lyn.event"


ALIGN 4 
DebuffNumberOfStats_Link:
WORD 8 // Mag, Str, Skl, Spd, Def, Res, Luk, Mov 


ALIGN 4 
DebuffEntrySize_Link:
WORD DebuffEntrySize 

ALIGN 4 
DebuffTableRam_Link:
WORD DebuffTableRam 

ALIGN 4 
DebuffTableSize_Link: 
WORD DebuffTableSize 


ALIGN 4 
DebuffRestorePerTurnAmount_Link:
WORD 3 

ALIGN 4 
BuffDepletePerTurnAmount_Link:
WORD 2 

#define RequireDamageToDebuff True 
RequireDamageToDebuff_Link: 
WORD RequireDamageToDebuff



RallySpectrumAmount_Link: 
WORD 2 
MagRallyAmount_Link: 
WORD 4 
StrRallyAmount_Link: 
WORD 4 
SklRallyAmount_Link: 
WORD 4 
SpdRallyAmount_Link: 
WORD 4 

DefRallyAmount_Link: 
WORD 4 
ResRallyAmount_Link: 
WORD 4 
LukRallyAmount_Link: 
WORD 8 
MovRallyAmount_Link: 
WORD 2 


#else // _FE8_
  ERROR Suspend Expansion and Debuff hack is for FE8
#endif // _FE8_

#endif // DEBUFFS_HACK
